
using System;
using ASP;
using Microsoft;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using DSRadicadoTableAdapters;
using DSGrupoSQLTableAdapters;
using System.Data.SqlClient;
using System.Web.Configuration;
using System.Collections;
using System.Collections.Generic;
using AjaxControlToolkit;
using System.Text;

public partial class _PQR : System.Web.UI.Page 
{
    string GrpDocRad = "1";
    
    protected void Page_Load(object sender, EventArgs e)
    {  
    try
    {
        
        if (!IsPostBack)
            {               
                this.DateFechaRad.Text = DateTime.Now.ToShortDateString() +" " + DateTime.Now.ToShortTimeString();
                this.TxtSerieD.Enabled = true;
                this.TxtAccion.Enabled = true;
                
                this.cmdAceptar.Enabled = true;
                
                this.RangeVFecVen.MinimumValue = (DateTime.Today.Day)+"/"+DateTime.Today.Month+"/"+DateTime.Today.Year;

                string codImagen = Request["RadicadoCodigo"];
                
                        String nrodoc = codImagen;
                    if (codImagen != null)
                    {
                        RadicadoBLL ObjRad = new RadicadoBLL();
                        DSRadicado.Radicado_ReadRadDataTable radicados = new DSRadicado.Radicado_ReadRadDataTable();
                        radicados = ObjRad.GetDataBy(nrodoc);
                        DataRow[] rows = radicados.Select();
                        this.DateFechaRad.Text = rows[0].ItemArray[2].ToString().Trim();
                        this.SelDateFechaProcedencia.Text = rows[0].ItemArray[3].ToString().Trim();
                        this.SelDateFechaVencimiento.Text = rows[0].ItemArray[9].ToString().Trim();
                        this.TxtNumeroExterno.Text = rows[0].ItemArray[5].ToString().Trim();
                        this.TxtProcedencia.Text = rows[0].ItemArray[4].ToString().Trim() + " | " + rows[0].ItemArray[15].ToString().Trim() + " | " + rows[0].ItemArray[19].ToString().Trim();
                        this.TxtDetalle.Text = rows[0].ItemArray[8].ToString();
                        this.TxtAnexo.Text = rows[0].ItemArray[20].ToString();  
                        this.TxtNaturaleza.Text = rows[0].ItemArray[6].ToString() + " | " + rows[0].ItemArray[16].ToString().Trim();
                        this.TxtMedioRecibo.Text = rows[0].ItemArray[11].ToString() + " | " + rows[0].ItemArray[17].ToString().Trim();
                        this.TxtExpediente.Text = rows[0].ItemArray[10].ToString() + " | " + rows[0].ItemArray[18].ToString().Trim();

                        
                        this.cmdAceptar.Enabled = false;
                        
                        this.TxtSerieD.Visible = false;
                        this.TxtAccion.Visible = false;
                        this.ImgFindCargar.Visible = false;
                       
                        this.LblCargarA.Visible = false;
                        this.LblAccion.Visible = false;

                        this.ImgCargarAdd.Visible = false;
                        this.ImageButton10.Visible = false;
                        this.ImageButton5.Visible = false;

                        //this.Label22.Text = "Radicado Nro" + " " + nrodoc;
                                               
                        //this.Label22.Text = "Radicado Nro" + " " + nrodoc;         
                    }
                    else
                    {
                        //this.Label22.Text = "";
                    }
               // }        
            }
            else
            {
                //Type cstype = this.GetType();
                //string nombreScript = "alertar";
                //ClientScriptManager cs = Page.ClientScript;
                //StringBuilder sb = new StringBuilder();
                //sb.AppendLine("function mostrarTexto()");
                //sb.AppendLine("{");
                //sb.AppendLine("alert(document.getElementById('" + TxtProcedencia.ClientID + "').value);");
                //sb.AppendLine("}");

                //if (!cs.IsStartupScriptRegistered(nombreScript))
                //{
                //    cs.RegisterStartupScript(cstype, nombreScript, sb.ToString(), true);
                //}    
            
                //SetFocusControl("_ctl0_ContentPlaceHolder1_TxtProcedencia");
            }
        }
        catch (Exception Error)
        {
         this.ExceptionDetails.Text = "Problema" + Error;
        }
    }
    protected void cmdAceptar_Click(object sender, EventArgs e)
    {  
       try
        {
            string RadicadoCodigo = "1";
            RadicadoBLL Obj = new RadicadoBLL();
              
            if (this.HFCargar.Value == "Dependencia" || this.HFCargar.Value == "")
                {
                   RadicadoCodigo = Obj.AddRadicado(GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), Convert.ToDateTime(SelDateFechaProcedencia.Text.ToString()), TxtProcedencia.Text.ToString(), null, TxtNumeroExterno.Text.ToString(), TxtNaturaleza.Text.ToString().Trim(), Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), TxtDetalle.Text.ToString(), TxtAnexo.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), TxtExpediente.Text.ToString(), TxtMedioRecibo.Text.ToString(),this.TxtSerieD.Text.ToString(), TxtAccion.Text.ToString(), "1", "0", Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 1, TxtDetalle.Text.ToString(), this.TxtSerieD.Text.ToString(), "0");
                if (RBEnterarA.SelectedValue == "T")
                        {
                            String Correcto = Obj.CopiaTodosRadicado( Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[0].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 2, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");     
                    //string Correcto = Obj.CopiaRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[0].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 4, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");

                        }    
                else
                        {
                            for (int i=0; i< ListBoxEnterar.Items.Count; i++)
                            {
                            string Correcto = Obj.CopiaRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[i].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()),2, TxtDetalle.Text.ToString(), null,RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()),"0");
                            }
                        }
                }
                else if (this.HFCargar.Value == "Serie")
                {
                   RadicadoCodigo = Obj.AddRadicado(GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), Convert.ToDateTime(SelDateFechaProcedencia.Text.ToString()), TxtProcedencia.Text.ToString(),this.TxtSerieD.Text.ToString(), TxtNumeroExterno.Text.ToString(), TxtNaturaleza.Text.ToString().Trim(), Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), TxtDetalle.Text.ToString(), TxtAnexo.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), TxtExpediente.Text.ToString(), TxtMedioRecibo.Text.ToString(), this.TxtSerieD.Text.ToString(), TxtAccion.Text.ToString(), "1", "0", Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 3, TxtDetalle.Text.ToString(), null, "0");
                    if (RBEnterarA.SelectedValue == "T")
                        {
                            String Correcto = Obj.CopiaTodosRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[0].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 2, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");         
                        //string Correcto = Obj.CopiaRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[0].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 4, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");

                        }    
                else
                    {
                    for (int i = 0; i < ListBoxEnterar.Items.Count; i++)
                    {

                        string Correcto = Obj.CopiaRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[i].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 2, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");
                    }
                    }
                }
                else if (this.HFCargar.Value == "Procesos")
                {
                     if (this.TxtSerieD.Text != null)
                        {
                        if (TxtSerieD.Text.Contains(" | "))
                            {
                            TxtSerieD.Text = TxtSerieD.Text.Remove(TxtSerieD.Text.IndexOf(" | "));
                            }
                        }
                        if (this.TxtProcedencia.Text != null)
                        {
                            if (TxtProcedencia.Text.Contains(" | "))
                            {
                                TxtProcedencia.Text = TxtProcedencia.Text.Remove(TxtProcedencia.Text.IndexOf(" | "));
                            }
                        }
                        if (this.TxtNaturaleza.Text != null)
                        {
                            if (TxtNaturaleza.Text.Contains(" | "))
                            {
                                TxtNaturaleza.Text = TxtNaturaleza.Text.Remove(TxtNaturaleza.Text.IndexOf(" | "));
                            }
                        }
                        if (this.TxtExpediente.Text != null)
                        {
                            if (TxtExpediente.Text.Contains(" | "))
                            {
                                TxtExpediente.Text = TxtExpediente.Text.Remove(TxtExpediente.Text.IndexOf(" | "));
                            }
                        }
                        if (this.TxtMedioRecibo.Text != null)
                        {
                            if (TxtMedioRecibo.Text.Contains(" | "))
                            {
                                TxtMedioRecibo.Text = TxtMedioRecibo.Text.Remove(TxtMedioRecibo.Text.IndexOf(" | "));
                            }
                        }
                    int? Result = 1;
                    DSRadicadoTableAdapters.Radicado_CreateRadicadoProcesosTableAdapter OBJTAProcesos = new Radicado_CreateRadicadoProcesosTableAdapter();
                    OBJTAProcesos.CreateRadicadoProcesos(GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), Convert.ToDateTime(SelDateFechaProcedencia.Text.ToString()), TxtProcedencia.Text.ToString(), this.TxtSerieD.Text, TxtNumeroExterno.Text.ToString(), TxtNaturaleza.Text.ToString().Trim(), Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), TxtDetalle.Text.ToString(), TxtAnexo.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), TxtExpediente.Text.ToString(), TxtMedioRecibo.Text.ToString(), "1", "0", Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 4, null, ref Result, "0");
                    RadicadoCodigo = Convert.ToString(Result);
                    
                    if (RBEnterarA.SelectedValue == "T")
                    {
                        String Correcto = Obj.CopiaTodosRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[0].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 2, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");     
                    }
                    else
                    {
                        for (int i = 0; i < ListBoxEnterar.Items.Count; i++)
                        {

                            string Correcto = Obj.CopiaRadicado(Profile.GetProfile(User.Identity.Name.ToString()).CodigoDepUsuario.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), this.ListBoxEnterar.Items[i].Value, this.TxtAccion.Text.ToString(), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), Convert.ToDateTime(SelDateFechaVencimiento.Text.ToString()), 2, TxtDetalle.Text.ToString(), null, RadicadoCodigo, GrpDocRad, Convert.ToDateTime(DateFechaRad.Text.ToString()), "0");
                        }
                    }
                }                      
            //this.Label22.Text = "Radicado Nro" + " " + RadicadoCodigo;
            this.LblMessageBox.Text = "Radicado Nro" + " " + RadicadoCodigo;     
            this.ModalPopupExtender1.Show();
            if (this.HFCargar.Value == "Dependencia" || this.HFCargar.Value == "")
            {
            MailBLL Correo = new MailBLL();
            MembershipUser usuario;
            DSUsuarioTableAdapters.UsuariosxdependenciaTableAdapter ObjTaUsuarioxDependencia = new DSUsuarioTableAdapters.UsuariosxdependenciaTableAdapter();
            DSUsuario.UsuariosxdependenciaDataTable DTUsuariosxDependencia = new DSUsuario.UsuariosxdependenciaDataTable();
            
            DTUsuariosxDependencia = ObjTaUsuarioxDependencia.GetUsuariosxDependenciaByDependencia(this.TxtSerieD.Text.Remove(TxtSerieD.Text.IndexOf(" | ")).ToString().Trim());
            DataRow[] rows = DTUsuariosxDependencia.Select();
            
                System.Guid a = new Guid(rows[0].ItemArray[0].ToString().Trim());
                usuario = Membership.GetUser(a);
                string Body = "Tiene un nuevo Radicado Nro " + RadicadoCodigo + "<BR>" + " Fecha de Radicacion: " + DateTime.Now.ToLongDateString() + " " + DateTime.Now.ToLongTimeString() + "<BR>" + "Procedencia: " + TxtProcedencia.Text.ToString() + "<BR>" + "Naturaleza: " + TxtNaturaleza.Text.ToString().Trim() + "<BR>";
                Correo.EnvioCorreo("soporte.archivar@gmail.com", usuario.Email, "Radicado Nro" + " " + RadicadoCodigo, Body, true, "1");
            }
        }
        catch (Exception Error)
        {
            this.ExceptionDetails.Text = "Problema" + Error;
        }
      }
    protected void cmdCancel_Click(object sender, EventArgs e)
    {
        try
        {
            //this.Session.Clear();
           // this.Session.Remove(Session.Keys["NroDoc"].ToString());
            Response.Redirect("~");
        }
        catch (Exception Error)
        {
            this.ExceptionDetails.Text = "Problema" + Error;
        }
    }
    protected void BtnNuevoRad_Click(object sender, EventArgs e)
    {
          try
            {

                Response.Redirect("~/AlfaNetDocumentos/DocRecibido/NuevoDocRecibido1.aspx");
        
            }
    catch (SqlException err)
    {
        //cnn.rol
       this.LblAccion.Text = "Error: " + err.Message.ToString();

    }
}
    protected void ImgBtnAdd_Click(object sender, EventArgs e)
    {
        this.ListBoxEnterar.Items.Add(this.TxtDependencia1.Text.ToString());
        this.TxtDependencia1.Text = "";
    }
    protected void ImgBtnDelete_Click(object sender, EventArgs e)
    {
        this.ListBoxEnterar.Items.Remove(this.ListBoxEnterar.SelectedItem);
        
        //this.ListBoxEnterar.Items.Add(this.TxtDependencia.Text.ToString());
    }
    protected void ImageButton7_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroNaturaleza.aspx"); 
        
    }
     private void PopulateSubLevel(int parentid, TreeNode parentNode)
    {
        DSDependenciaSQLTableAdapters.DependenciaByTextTableAdapter TADSD = new DSDependenciaSQLTableAdapters.DependenciaByTextTableAdapter();
        DSDependenciaSQL.DependenciaByTextDataTable DTDependencia = new DSDependenciaSQL.DependenciaByTextDataTable();
        DTDependencia = TADSD.GettreedependenciaDataBy(Convert.ToString(parentid));
        PopulateNodes(DTDependencia, parentNode.ChildNodes);   
    }  
    protected void TreeView1_TreeNodePopulate(object sender, TreeNodeEventArgs e)
    {
        if (TreeView1.SelectedNode == null)
        PopulateSubLevel(Int32.Parse(e.Node.Value), e.Node);
    } 
    private void PopulateNodes(DataTable dt, TreeNodeCollection nodes)
    {
        foreach (DataRow dr in dt.Rows)
        {
            TreeNode tn = new TreeNode();
            tn.Text = dr["DependenciaCodigo"].ToString() + " | " + dr["DependenciaNombre"].ToString();
            tn.Value = dr["DependenciaCodigo"].ToString();
            nodes.Add(tn);
            tn.PopulateOnDemand = (Convert.ToInt32(dr["childnodecount"]) > 0);
        }
    }
    protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)
    {
        if ((String.IsNullOrEmpty(this.TreeView1.SelectedNode.Text)) == false)
        {
            this.TxtSerieD.Text = TreeView1.SelectedNode.Text.ToString();
            this.TreeView1.CollapseAll();
            this.TreeView1.Dispose();
            this.HFCargar.Value = "Dependencia";
        }
       
    }
     protected void TreeVSerie_TreeNodePopulate(object sender, TreeNodeEventArgs e)
    {
        PopulateSubLevelSerie((e.Node.Value), e.Node);
    }   
    protected void TreeVSerie_SelectedNodeChanged(object sender, EventArgs e)
    {
        if ((String.IsNullOrEmpty(this.TreeVSerie.SelectedNode.Text)) == false)
        {
            this.TxtSerieD.Text = this.TreeVSerie.SelectedNode.Text;
            this.TreeVSerie.CollapseAll();
            this.HFCargar.Value = "Serie";
        }
    }
    private void PopulateSubLevelSerie(String parentid, TreeNode parentNode)
    {
        DSSerieSQLTableAdapters.SerieByTextTableAdapter TADSS = new DSSerieSQLTableAdapters.SerieByTextTableAdapter();
        DSSerieSQL.SerieByTextDataTable DTSerie = new DSSerieSQL.SerieByTextDataTable();

        DTSerie = TADSS.GetSerieTreeDataBy(Convert.ToString(parentid));

        PopulateNodesSerie(DTSerie, parentNode.ChildNodes);
    }
    private void PopulateNodesSerie(DataTable dt, TreeNodeCollection nodes)
    {
        foreach (DataRow dr in dt.Rows)
        {
            TreeNode tn = new TreeNode();

            tn.Text = dr["SerieCodigo"].ToString() + " | " + dr["SerieNombre"].ToString();
            tn.Value = dr["SerieCodigo"].ToString();
            nodes.Add(tn);

            //If node has child nodes, then enable on-demand populating
            tn.PopulateOnDemand = (Convert.ToInt32(dr["childnodecount"]) > 0);
        }
    }
    private void PopulateSubLevelProceso(int parentid, TreeNode parentNode)
    {
        ProcesoTableAdapters.WFProcesoTableAdapter TAPRO = new ProcesoTableAdapters.WFProcesoTableAdapter();
        Proceso.WFProcesoDataTable DTProceso = new Proceso.WFProcesoDataTable();
        DTProceso = TAPRO.GetProcesoTreeVDataBy(Convert.ToString(parentid));

        PopulateNodesProceso(DTProceso, parentNode.ChildNodes);
    }
    private void PopulateNodesProceso(DataTable dt, TreeNodeCollection nodes)
    {
        foreach (DataRow dr in dt.Rows)
        {
            TreeNode tn = new TreeNode();

            tn.Text = dr["WFProcesoCodigo"].ToString() + " | " + dr["WFProcesoDescripcion"].ToString();
            tn.Value = dr["WFProcesoCodigo"].ToString();
            nodes.Add(tn);

            //If node has child nodes, then enable on-demand populating
            tn.PopulateOnDemand = (Convert.ToInt32(dr["childnodecount"]) > 0);
        }
    }
    protected void TreeVProceso_SelectedNodeChanged(object sender, EventArgs e)
    {
        if ((String.IsNullOrEmpty(this.TreeVProceso.SelectedNode.Text)) == false)
        {
            // Popup result is the selected task}
            this.TxtSerieD.Text = this.TreeVProceso.SelectedNode.Text;
            this.TreeVProceso.CollapseAll();
            this.HFCargar.Value = "Procesos";
        }
    }
    protected void TreeVProceso_TreeNodePopulate(object sender, TreeNodeEventArgs e)
    {
        PopulateSubLevelProceso(Int32.Parse(e.Node.Value), e.Node);
    }
    protected void RBEnterarA_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (RBEnterarA.SelectedValue == "T")
            {
                this.ListBoxEnterar.Items.Clear();
                this.TxtDependencia1.Text = "";
                this.TxtDependencia1.ReadOnly = true;
               // this.DropDownExtender3.Enabled = false;
                this.ImgBtnAdd.Enabled = false;
                this.ImgBtnDelete.Enabled = false;
                this.ListBoxEnterar.Items.Add("Todas | Todas");
            }
        else
            {
                this.ListBoxEnterar.Items.Clear();
                this.TxtDependencia1.Text = "";
                this.TxtDependencia1.ReadOnly = false;
                //this.DropDownExtender3.Enabled = true;
                this.ImgBtnAdd.Enabled = true;
                this.ImgBtnDelete.Enabled = true;
            }
    } 
    protected void ImageButton2_Click1(object sender, ImageClickEventArgs e)
    {
        ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
        // scriptManager.
        scriptManager.SetFocus(TxtNaturaleza);
    }
    protected void ImageButton3_Click1(object sender, ImageClickEventArgs e)
    {
        ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
        scriptManager.SetFocus(this.TxtMedioRecibo);
    }
    protected void ImageButton4_Click1(object sender, ImageClickEventArgs e)
    {
        ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
        scriptManager.SetFocus(this.TxtExpediente);
    }
    protected void ImageButton5_Click1(object sender, ImageClickEventArgs e)
    {
        ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
        scriptManager.SetFocus(this.TxtAccion);
    }
    protected void RadBtnLstFindby_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (RadBtnLstFindby.SelectedValue == "1")
            {
                this.AutoCompleteExtender2.ServiceMethod = "GetProcedenciaByTextNombre";                      
            }
        else if (RadBtnLstFindby.SelectedValue == "2")
           {
               this.AutoCompleteExtender2.ServiceMethod = "GetProcedenciaByTextId";    
           }
    }
    protected void ImageButton1_Click(object sender, ImageClickEventArgs e)
    {
        ScriptManager scriptManager = ScriptManager.GetCurrent(this.Page);
        scriptManager.SetFocus(TxtProcedencia);
    }
    protected void ImageButton6_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroProcedencia.aspx");
        //Response.Redirect("");
    }
    protected void ImageButton8_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroMedio.aspx");
    }
    protected void ImageButton9_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroExpediente.aspx");
    }
    protected void ImageButton10_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroWorkFlowAccion.aspx");
    }
    protected void ImageButton11_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroDependenciaJuan.aspx");
    }
    protected void ImageButton12_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroSerie.aspx");
    }
    protected void ImageButton13_Click(object sender, ImageClickEventArgs e)
    {
        Response.Redirect("~/AlfaNetAdministracion/AdminMaestros/MaestroWorkFlowProceso.aspx");
    }
}
        
           
      
